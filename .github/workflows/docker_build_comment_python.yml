name: "docker build comment"
on:
  issue_comment:

jobs:
  docker_build_comment:
    name: "Docker build comment"
    runs-on: ubuntu-latest
    if: ${{ github.event.issue.pull_request != null && github.event.comment.body == '.build' }}
    steps:
      - uses: actions/github-script@v3
        id: get-pr
        with:
          script: |
            const request = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            }
            core.info(`Getting PR #${request.pull_number} from ${request.owner}/${request.repo}`)
            try {
              const result = await github.pulls.get(request)
              return result.data
            } catch (err) {
              core.setFailed(`Request failed with error ${err}`)
            }
      - uses: actions/checkout@v2
        with:
          repository: ${{ fromJSON(steps.get-pr.outputs.result).head.repo.full_name }}
          ref: ${{ fromJSON(steps.get-pr.outputs.result).head.ref }} # or .head.ref for branch name

      - name: Configure AWS credentials from Test account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: 554506578892.dkr.ecr.ap-northeast-1.amazonaws.com
          ECR_REPOSITORY: discord-instagram-bot
        run: |
          VERSION=$(cat VERSION.txt)
          commit_hash=${{ fromJSON(steps.get-pr.outputs.result).head.sha }}
          commit_hash_7=${commit_hash:0:7}

          IMAGE_TAG=${VERSION}-${commit_hash_7}
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG


      - name: Update tag version
        run: |
          sed -i -e "s/^container_tag\(  *\)= \"\(..*\)\".*$/container_tag\1= \"`cat VERSION.txt`-`git rev-parse --short=7 HEAD`\"/g" terraform/run/env/dev/dev.auto.tfvars

      - name: git-auto commit
        env:
          INPUT_COMMIT_USER_NAME: GitHub Actions
          INPUT_COMMIT_USER_EMAIL: actions@github.com
        run: |
          commit_hash=${{ fromJSON(steps.get-pr.outputs.result).head.sha }}
          git add .
          git \
            -c user.name="$INPUT_COMMIT_USER_NAME" -c user.email="$INPUT_COMMIT_USER_EMAIL" \
            commit \
            -m "Update Tag Version(app) to ${commit_hash:0:7}" \
            --author="${{ github.event.comment.actor.login }}"
          git push --set-upstream origin ${{ fromJSON(steps.get-pr.outputs.result).head.ref }}
